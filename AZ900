*********************************Microsoft Azure Fundamentals: cloud concepts***********************************************
*************************************************************************************************************************************
*************************************************************************************************************************************
1) Cloud Computing 
computing services over the internet, VMs, storage, DBs, networking, IoT, ML/AI
helps in rapid expansion of IT footprint.

2) Shared responsibility model
traditional Datacenter --> comapny maintains everything
shared responsibility model --> responsibility shared between cloud provider and consumer. Cloud provider --> datacenter security, power, cooling, 
network connectivity (basically everything related to datacenter). Consumer --> data and info stored in the cloud and its access security.
Sometimes the responsibility also depends on the situation. ex a) cloud SQL DB --> maintenance responsibility --> cloud provider
b) VM --> SQL DB --> maintenance responsibility --> consumer
The responsibility also depends on the service type ex: IaaS (Only physical hosts/networkdatacenter responsibility with cloud provider),
PaaS (IaaS responsibilities + OS, applications, identity and directory infra related responsibilities given to cloud provider),
SaaS (Info, data, devices, accounts/identities are only left with consumer)

3) Cloud models
a) Private cloud : used by single entity, much greater control but also great cost, can be even provided by a third party.
b) public cloud : controlled,maintained by third party. 
c) Hybrid cloud : both public and private cloud in an interconnected environment. ex: using public cloud when there is a temporary surge in demand.
d) Multi cloud : using multiple public cloud providers.

Azure Arc --> technologies to manage cloud environment (whether public cloud or private or hybrid or multi)
Azure VMware solutions --> run VMware workloads in Azure with seamless integration and scalability.

4) Consumption based model

IT infra models, 2 types of expenses --> CapEx, OpEx
CapEx --> one time, upfront, tangible resources
OpEx --> overtime ex: cloud computing

Cloud computing --> OpEx, consumption based model, no upfront cost, pay for more resources only when it's needed,stop paying as soon as they are not required,
don't have to worry about correct/accurate estimation of the resources needed. Just add/remove resources as and when required.

5) Cloud pricing model
pay-as-you-go pricing model --> pay only for what you use (basically rent compute power/storage)
Adv : operating cost management/planning, more efficient infra, dynamic scaling as per need

6) high availability 
high availability focusses on maximum availability of the application/services/IT resources regardless of disruption/events
For azure, these uptime guarantees depends on the service and are part of SLAs(service level aggreements).
But high availability comes with a cost, so always optimise based on your needs. In Azure, every service has its own availability percentage.

7) Scalability
ability to adjust resources to meet demand. As Cloud computing uses consumption based model, you can reduce/increase your resources as 
per demand and reduce the costs.
Vertical scaling : increasing/decreasing capabilities of resources. ex: increasing (scale up)/decreasing (scale down) RAM of a VM
horizontal scaling : adding / subtracting the number of resources. ex: adding new VMs (scaling out), reducing the number of VMs (scaling in)

8) Reliability
ability of the system to recover from failures and continue to function.
cloud --> decentralized design (resources deployed in regions around the world) --> reliable/resilient infra.

9) Predictability
performance predictability and cost predictablity
performance predictability : predicting resources needed; Autoscaling (both scale up or scale down), load balancing (if traffic is heavily focussed on one area,
it helps in redirecting the overload), high availability etc.
cost predictability : forecasting cost of cloud spent. track your resources in real time, monitor resources for effcient usage, apply data analytics for 
better planning of resource deployment. cloud analytics also help in predicting future costs and reqiured resources. other tools : total cost of ownership
or pricing calculator.

10) Governance and compliance
set templates --> ensure coorporate standards and government regulations (also update the standards as and when required). 
cloud based auditing --> identify out of compliance resources, provide migration strategies

11) Security
maximum control over security --> IaaS
If want automatic software patches  and maintenance use SaaS
establish your good governance footprints early to keep cloud footprint updated/secure/well managed.

12) Manageability

### Management of the Cloud ####
--> automatic scaling
--> preconfigured templates for resource deployment
--> monitor resource health; automatic replacement of failing resources
--> automatic alerts based on configuration (real time performance monitoring)

*** Management in the cloud ****
--> through web portal
--> CLI
--> APIs
--> powershell

13) Infrastructure as a Service (IaaS)
---> most flexible, most control over cloud resources
--> cloud provider : harware maintenance, network connnectivity, physical security
--> you are responsible for : OS installation, configuration, maintenance; network configuration; DB/storage configurations, patching and updates, security, etc.

## Shared Responsibility Model : applies to all cloud service types.
IaaS : largest share of responsibility with you.
check this image on Shared responsibility model :
https://learn.microsoft.com/en-us/training/wwl-azure/describe-cloud-service-types/media/shared-responsibility-b3829bfe.svg
Scenarios for IaaS :
* Lift and shift migration : simply moving things running on-prem to on IaaS infra
* Testing and development : You have established config. for development/ test environments that you need to replicate rapidly. standup or shut down various 
environments repidly while maintaining complete control.

14) Platform as a Service (PaaS)
--> middle ground between renting space in datacenter (IaaS) and paying for complete deployed solutions (SaaS).
--> cloud provider : harware maintenance, network connnectivity, physical security, OS, middleware, development tools, Business intelligence services,
                     patching and licensing of OS/DBs
PaaS : well suited to provide complete development environment.
## Shared Responsibility Model :
PaaS : harware maintenance, network connnectivity, physical security, OS, DBs, development tools.
For networking, connectivity settings, security, directory infra :  responsibility depends on the configurations.
Scenarios for PaaS :
* Development framework : PaaS lets developer create applications using built-in software components. 
* Analytics or business intelligence

15) Software as a Service (SaaS)
--> most complete cloud service model
--> essentially renting fully developed applications. ex: email, financial software, messaging application, etc.
--> least flexible, but easiest to get up and running
--> requires least tech skills

## Shared Responsibility Model 
SaaS : most reponsibility on cloud provider
you are responsible for : data , devices allowed to connect to the system, users that have the access
Scenarios for SaaS :
* Email/Messaging
* Business productivity application
* Finance and expense tracking

*********************************Microsoft Azure Fundamentals: Azure architecture and services ***********************************************
*************************************************************************************************************************************
*************************************************************************************************************************************

Azure? --> cloud services to build, manage and deploy applications on a global network
Azure offering?
--> continuos innovation from Microsoft
--> open source, support for all languages/frameworks
--> operate hybrid seamlessly (hybrid cloud solutions)
--> security; compliance
What can you do with Azure?
--> do everything from running existing application on VM to exploring intelligent bots/mixed reality
--> VMs are good start, but cloud/Azure is more than that! ex: you can use AI/Mlservices to naturally communicate with your users! Or you can use storage solutions
    which can dynamically grow!


1) Azure Accounts

Azure account --> Azure subscription --> Azure resource groups --> Azure resources/services

check this image : https://learn.microsoft.com/en-us/training/wwl-azure/describe-core-architectural-components-of-azure/media/account-scope-levels-9ceb3abd.png

Azure account --> Billing accounts --> Billing profiles --> Invoice sections

Azure Free account --> free access to popular azure products for 12 months; credit to use for the first 30 days; access to products that are always free.
Azure free student account --> free access to certain azure products for 12 months; credit to use for the first 12 months; access to dev tools.
Microsoft Learn sandbox --> temporary subscriptions added to your azure account which can be used during learn module. These are automatically cleaned up after 
                            the module is completed.

2) Azure physical infrastructure

Core Architectural components of Azure --> 2 main groupings --> physical infrastructure and management infrastructure

Physical Infrastructure
DataCenters (kinda same as large corporate datacenters) --> Azure has datacenters around the world.
These datacenters aren't directly accessible. These are grouped into Azure Regions/Azure Availability Zones.

3) Regions
geographical area that contains one or more datacenters. These datacenters (if more than one), are networked together with low-latency.

** Azure Active Directory, Azure traffic manager, Azure DNS don't require you to select a particular region.

4) Availability Zones
These are physically separated datacenters within an Azure region. These datacenters are equipped with independent power, cooling, and networking.
So, availability zone is setup to be an isolation boundary (so if one fails, other can keep working). These availibility zones are connected through high-speed,
private fiber-optic networks.

** A minimum of 3 separate availability zones are present in availability zone - enabled region.

Availability zones categories:
Zonal services --> you pin the resource to a specific zone (ex: VMs, managed disks, IP addresses)
Zone-redundant services --> platform replicated automatically across zones (ex: zone redundant storage, SQL DBs)
Non-regional services --> services are always available from Azure geographies (resilient to zone-wise/region-wide outages)

** Azure has region pairs to provide further resilience.

5) Region pairs
most azure regions are paired with another region within same geography to reduce interruptions in case of region wide outages.
But not all azure services automatically replicate data or fall back from failed region to cross-replicate to another enabled region.

Advantages of Azure : 
--> in outages, atleast one of the regions is prioritized for restoration.
--> updates are rolled out one region at a time to minimize downtime.
--> data continues to reside within same geography (tax, law jurisdiction purposes)

pairing can be both in two directions (both regions provide backups for each other), (or) can be in one direction.

6) Sovereign regions
These instances are isolated from main instances of Azure. These may be required for compliance or legal purposes.
ex: US DoD Central, US Gov Virginia, US Gov Iowa, etc : physical and logical network isolated instances
    China East, China North, etc
    
7) Azure resource and resource groups
resources are basic building blocks. ex : VMs, DBs, etc.
resource groups are simply groupings of resources. Every resource is placed into a resource group. Resource can be associated with only one resource group at
a time. The resource group of any resource can be changes later as well. resource group can't be nested.
Any action (ex : delete, access grant/deny) done on resource group apply to all resources within it.

8) Azure subscriptions
subscriptions are unit of management, billling, and scale. It provides authenticated and authorized access to azure products and services.
An account can have multiple subscriptions, but only one is mandatory. 

Azure subscription boundaries :
--> Billing boundary : how an Azure account is billed? separate billing reports and invoices are generated for each subscription.
--> Access control boundary : access mgmt policies at subscription level. 

Additional azure subscriptions can be used to separate different environments, reflect organizational structures, manage billing/track costs

9) Azure management groups
If you have multiple subscriptions, you can organize subscriptions into containers (management groups) and apply governance conditions. All subscriptions 
automatically inherit conditions applied to management group.
Management groups give enterprise-grade management at a large scale. 
Management groups can be nested.
check this image : https://learn.microsoft.com/en-us/training/wwl-azure/describe-core-architectural-components-of-azure/media/management-groups-subscriptions-dfd5a108.png

Management groups use cases :
--> create hierarchy that applies a policy : VM locations, security policy.
--> provide user access to multiple subscriptions : moving multiple subscriptions under a mgmt group, and create one Azure role-based access control (Azure RBAC)
assignment on the mgmt group.

** 10000 mgmt groups can be supported in a single directory.
** upto 6 levels of depth can be supported in management group tree
** each management group and subscription can support only one parent.


































