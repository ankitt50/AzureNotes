*********************************Microsoft Azure Fundamentals: cloud concepts***********************************************
*************************************************************************************************************************************
*************************************************************************************************************************************
1) Cloud Computing 
computing services over the internet, VMs, storage, DBs, networking, IoT, ML/AI
helps in rapid expansion of IT footprint.

2) Shared responsibility model
traditional Datacenter --> comapny maintains everything
shared responsibility model --> responsibility shared between cloud provider and consumer. Cloud provider --> datacenter security, power, cooling, 
network connectivity (basically everything related to datacenter). Consumer --> data and info stored in the cloud and its access security.
Sometimes the responsibility also depends on the situation. ex a) cloud SQL DB --> maintenance responsibility --> cloud provider
b) VM --> SQL DB --> maintenance responsibility --> consumer
The responsibility also depends on the service type ex: IaaS (Only physical hosts/networkdatacenter responsibility with cloud provider),
PaaS (IaaS responsibilities + OS, applications, identity and directory infra related responsibilities given to cloud provider),
SaaS (Info, data, devices, accounts/identities are only left with consumer)

3) Cloud models
a) Private cloud : used by single entity, much greater control but also great cost, can be even provided by a third party.
b) public cloud : controlled,maintained by third party. 
c) Hybrid cloud : both public and private cloud in an interconnected environment. ex: using public cloud when there is a temporary surge in demand.
d) Multi cloud : using multiple public cloud providers.

Azure Arc --> technologies to manage cloud environment (whether public cloud or private or hybrid or multi)
Azure VMware solutions --> run VMware workloads in Azure with seamless integration and scalability.

4) Consumption based model

IT infra models, 2 types of expenses --> CapEx, OpEx
CapEx --> one time, upfront, tangible resources
OpEx --> overtime ex: cloud computing

Cloud computing --> OpEx, consumption based model, no upfront cost, pay for more resources only when it's needed,stop paying as soon as they are not required,
don't have to worry about correct/accurate estimation of the resources needed. Just add/remove resources as and when required.

5) Cloud pricing model
pay-as-you-go pricing model --> pay only for what you use (basically rent compute power/storage)
Adv : operating cost management/planning, more efficient infra, dynamic scaling as per need

6) high availability 
high availability focusses on maximum availability of the application/services/IT resources regardless of disruption/events
For azure, these uptime guarantees depends on the service and are part of SLAs(service level aggreements).
But high availability comes with a cost, so always optimise based on your needs. In Azure, every service has its own availability percentage.

7) Scalability
ability to adjust resources to meet demand. As Cloud computing uses consumption based model, you can reduce/increase your resources as 
per demand and reduce the costs.
Vertical scaling : increasing/decreasing capabilities of resources. ex: increasing (scale up)/decreasing (scale down) RAM of a VM
horizontal scaling : adding / subtracting the number of resources. ex: adding new VMs (scaling out), reducing the number of VMs (scaling in)

8) Reliability
ability of the system to recover from failures and continue to function.
cloud --> decentralized design (resources deployed in regions around the world) --> reliable/resilient infra.

9) Predictability
performance predictability and cost predictablity
performance predictability : predicting resources needed; Autoscaling (both scale up or scale down), load balancing (if traffic is heavily focussed on one area,
it helps in redirecting the overload), high availability etc.
cost predictability : forecasting cost of cloud spent. track your resources in real time, monitor resources for effcient usage, apply data analytics for 
better planning of resource deployment. cloud analytics also help in predicting future costs and reqiured resources. other tools : total cost of ownership
or pricing calculator.

10) Governance and compliance
set templates --> ensure coorporate standards and government regulations (also update the standards as and when required). 
cloud based auditing --> identify out of compliance resources, provide migration strategies

11) Security
maximum control over security --> IaaS
If want automatic software patches  and maintenance use SaaS
establish your good governance footprints early to keep cloud footprint updated/secure/well managed.

12) Manageability

### Management of the Cloud ####
--> automatic scaling
--> preconfigured templates for resource deployment
--> monitor resource health; automatic replacement of failing resources
--> automatic alerts based on configuration (real time performance monitoring)

*** Management in the cloud ****
--> through web portal
--> CLI
--> APIs
--> powershell

13) Infrastructure as a Service (IaaS)
---> most flexible, most control over cloud resources
--> cloud provider : harware maintenance, network connnectivity, physical security
--> you are responsible for : OS installation, configuration, maintenance; network configuration; DB/storage configurations, patching and updates, security, etc.

## Shared Responsibility Model : applies to all cloud service types.
IaaS : largest share of responsibility with you.
check this image on Shared responsibility model :
https://learn.microsoft.com/en-us/training/wwl-azure/describe-cloud-service-types/media/shared-responsibility-b3829bfe.svg
Scenarios for IaaS :
* Lift and shift migration : simply moving things running on-prem to on IaaS infra
* Testing and development : You have established config. for development/ test environments that you need to replicate rapidly. standup or shut down various 
environments repidly while maintaining complete control.

14) Platform as a Service (PaaS)
--> middle ground between renting space in datacenter (IaaS) and paying for complete deployed solutions (SaaS).
--> cloud provider : harware maintenance, network connnectivity, physical security, OS, middleware, development tools, Business intelligence services,
                     patching and licensing of OS/DBs
PaaS : well suited to provide complete development environment.
## Shared Responsibility Model :
PaaS : harware maintenance, network connnectivity, physical security, OS, DBs, development tools.
For networking, connectivity settings, security, directory infra :  responsibility depends on the configurations.
Scenarios for PaaS :
* Development framework : PaaS lets developer create applications using built-in software components. 
* Analytics or business intelligence

15) Software as a Service (SaaS)
--> most complete cloud service model
--> essentially renting fully developed applications. ex: email, financial software, messaging application, etc.
--> least flexible, but easiest to get up and running
--> requires least tech skills

## Shared Responsibility Model 
SaaS : most reponsibility on cloud provider
you are responsible for : data , devices allowed to connect to the system, users that have the access
Scenarios for SaaS :
* Email/Messaging
* Business productivity application
* Finance and expense tracking

























